<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="paymentFlowPanel.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cashPay.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>